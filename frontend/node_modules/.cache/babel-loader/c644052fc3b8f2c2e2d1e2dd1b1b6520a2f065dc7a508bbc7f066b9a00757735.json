{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Downloads\\\\sample\\\\food-delivery-app\\\\frontend\\\\src\\\\context\\\\OrderContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderContext = /*#__PURE__*/createContext();\nexport const useOrder = () => {\n  _s();\n  return useContext(OrderContext);\n};\n_s(useOrder, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const OrderProvider = ({\n  children\n}) => {\n  _s2();\n  const [orders, setOrders] = useState(() => {\n    const savedOrders = localStorage.getItem('orders');\n    return savedOrders ? JSON.parse(savedOrders) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem('orders', JSON.stringify(orders));\n  }, [orders]);\n  const placeOrder = (cartItems, restaurant, total, deliveryAddress) => {\n    const newOrder = {\n      id: 'order_' + Date.now(),\n      items: cartItems,\n      restaurant,\n      total,\n      status: 'placed',\n      createdAt: new Date().toISOString(),\n      deliveryAddress,\n      estimatedDelivery: new Date(Date.now() + 45 * 60000).toISOString(),\n      // 45 minutes from now\n      statusUpdates: [{\n        status: 'placed',\n        timestamp: new Date().toISOString(),\n        message: 'Order placed successfully'\n      }]\n    };\n    setOrders(prevOrders => [newOrder, ...prevOrders]);\n    return newOrder.id;\n  };\n  const updateOrderStatus = (orderId, status, message) => {\n    setOrders(prevOrders => prevOrders.map(order => {\n      if (order.id === orderId) {\n        return {\n          ...order,\n          status,\n          statusUpdates: [...order.statusUpdates, {\n            status,\n            timestamp: new Date().toISOString(),\n            message\n          }]\n        };\n      }\n      return order;\n    }));\n  };\n  const addReview = (orderId, itemId, rating, comment) => {\n    setOrders(prevOrders => prevOrders.map(order => {\n      if (order.id === orderId) {\n        return {\n          ...order,\n          items: order.items.map(item => {\n            if (item._id === itemId) {\n              return {\n                ...item,\n                review: {\n                  rating,\n                  comment,\n                  createdAt: new Date().toISOString()\n                }\n              };\n            }\n            return item;\n          })\n        };\n      }\n      return order;\n    }));\n  };\n  const getOrder = orderId => {\n    return orders.find(order => order.id === orderId);\n  };\n  const getOrdersByRestaurant = restaurantId => {\n    return orders.filter(order => order.restaurant._id === restaurantId);\n  };\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: {\n      orders,\n      placeOrder,\n      updateOrderStatus,\n      addReview,\n      getOrder,\n      getOrdersByRestaurant\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s2(OrderProvider, \"HF1J/Y1LY1DfgGZ2mVUfTYWWnNM=\");\n_c = OrderProvider;\nvar _c;\n$RefreshReg$(_c, \"OrderProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","OrderContext","useOrder","_s","OrderProvider","children","_s2","orders","setOrders","savedOrders","localStorage","getItem","JSON","parse","setItem","stringify","placeOrder","cartItems","restaurant","total","deliveryAddress","newOrder","id","Date","now","items","status","createdAt","toISOString","estimatedDelivery","statusUpdates","timestamp","message","prevOrders","updateOrderStatus","orderId","map","order","addReview","itemId","rating","comment","item","_id","review","getOrder","find","getOrdersByRestaurant","restaurantId","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/priya/Downloads/sample/food-delivery-app/frontend/src/context/OrderContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst OrderContext = createContext();\n\nexport const useOrder = () => useContext(OrderContext);\n\nexport const OrderProvider = ({ children }) => {\n  const [orders, setOrders] = useState(() => {\n    const savedOrders = localStorage.getItem('orders');\n    return savedOrders ? JSON.parse(savedOrders) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem('orders', JSON.stringify(orders));\n  }, [orders]);\n\n  const placeOrder = (cartItems, restaurant, total, deliveryAddress) => {\n    const newOrder = {\n      id: 'order_' + Date.now(),\n      items: cartItems,\n      restaurant,\n      total,\n      status: 'placed',\n      createdAt: new Date().toISOString(),\n      deliveryAddress,\n      estimatedDelivery: new Date(Date.now() + 45 * 60000).toISOString(), // 45 minutes from now\n      statusUpdates: [\n        {\n          status: 'placed',\n          timestamp: new Date().toISOString(),\n          message: 'Order placed successfully'\n        }\n      ]\n    };\n\n    setOrders(prevOrders => [newOrder, ...prevOrders]);\n    return newOrder.id;\n  };\n\n  const updateOrderStatus = (orderId, status, message) => {\n    setOrders(prevOrders => \n      prevOrders.map(order => {\n        if (order.id === orderId) {\n          return {\n            ...order,\n            status,\n            statusUpdates: [\n              ...order.statusUpdates,\n              {\n                status,\n                timestamp: new Date().toISOString(),\n                message\n              }\n            ]\n          };\n        }\n        return order;\n      })\n    );\n  };\n\n  const addReview = (orderId, itemId, rating, comment) => {\n    setOrders(prevOrders =>\n      prevOrders.map(order => {\n        if (order.id === orderId) {\n          return {\n            ...order,\n            items: order.items.map(item => {\n              if (item._id === itemId) {\n                return {\n                  ...item,\n                  review: {\n                    rating,\n                    comment,\n                    createdAt: new Date().toISOString()\n                  }\n                };\n              }\n              return item;\n            })\n          };\n        }\n        return order;\n      })\n    );\n  };\n\n  const getOrder = (orderId) => {\n    return orders.find(order => order.id === orderId);\n  };\n\n  const getOrdersByRestaurant = (restaurantId) => {\n    return orders.filter(order => order.restaurant._id === restaurantId);\n  };\n\n  return (\n    <OrderContext.Provider\n      value={{\n        orders,\n        placeOrder,\n        updateOrderStatus,\n        addReview,\n        getOrder,\n        getOrdersByRestaurant\n      }}\n    >\n      {children}\n    </OrderContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMN,UAAU,CAACI,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IACzC,MAAMa,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAClD,OAAOF,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,GAAG,EAAE;EACnD,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACdY,YAAY,CAACI,OAAO,CAAC,QAAQ,EAAEF,IAAI,CAACG,SAAS,CAACR,MAAM,CAAC,CAAC;EACxD,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZ,MAAMS,UAAU,GAAGA,CAACC,SAAS,EAAEC,UAAU,EAAEC,KAAK,EAAEC,eAAe,KAAK;IACpE,MAAMC,QAAQ,GAAG;MACfC,EAAE,EAAE,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MACzBC,KAAK,EAAER,SAAS;MAChBC,UAAU;MACVC,KAAK;MACLO,MAAM,EAAE,QAAQ;MAChBC,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;MACnCR,eAAe;MACfS,iBAAiB,EAAE,IAAIN,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC;MAAE;MACpEE,aAAa,EAAE,CACb;QACEJ,MAAM,EAAE,QAAQ;QAChBK,SAAS,EAAE,IAAIR,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;QACnCI,OAAO,EAAE;MACX,CAAC;IAEL,CAAC;IAEDxB,SAAS,CAACyB,UAAU,IAAI,CAACZ,QAAQ,EAAE,GAAGY,UAAU,CAAC,CAAC;IAClD,OAAOZ,QAAQ,CAACC,EAAE;EACpB,CAAC;EAED,MAAMY,iBAAiB,GAAGA,CAACC,OAAO,EAAET,MAAM,EAAEM,OAAO,KAAK;IACtDxB,SAAS,CAACyB,UAAU,IAClBA,UAAU,CAACG,GAAG,CAACC,KAAK,IAAI;MACtB,IAAIA,KAAK,CAACf,EAAE,KAAKa,OAAO,EAAE;QACxB,OAAO;UACL,GAAGE,KAAK;UACRX,MAAM;UACNI,aAAa,EAAE,CACb,GAAGO,KAAK,CAACP,aAAa,EACtB;YACEJ,MAAM;YACNK,SAAS,EAAE,IAAIR,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC;YACnCI;UACF,CAAC;QAEL,CAAC;MACH;MACA,OAAOK,KAAK;IACd,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAMC,SAAS,GAAGA,CAACH,OAAO,EAAEI,MAAM,EAAEC,MAAM,EAAEC,OAAO,KAAK;IACtDjC,SAAS,CAACyB,UAAU,IAClBA,UAAU,CAACG,GAAG,CAACC,KAAK,IAAI;MACtB,IAAIA,KAAK,CAACf,EAAE,KAAKa,OAAO,EAAE;QACxB,OAAO;UACL,GAAGE,KAAK;UACRZ,KAAK,EAAEY,KAAK,CAACZ,KAAK,CAACW,GAAG,CAACM,IAAI,IAAI;YAC7B,IAAIA,IAAI,CAACC,GAAG,KAAKJ,MAAM,EAAE;cACvB,OAAO;gBACL,GAAGG,IAAI;gBACPE,MAAM,EAAE;kBACNJ,MAAM;kBACNC,OAAO;kBACPd,SAAS,EAAE,IAAIJ,IAAI,CAAC,CAAC,CAACK,WAAW,CAAC;gBACpC;cACF,CAAC;YACH;YACA,OAAOc,IAAI;UACb,CAAC;QACH,CAAC;MACH;MACA,OAAOL,KAAK;IACd,CAAC,CACH,CAAC;EACH,CAAC;EAED,MAAMQ,QAAQ,GAAIV,OAAO,IAAK;IAC5B,OAAO5B,MAAM,CAACuC,IAAI,CAACT,KAAK,IAAIA,KAAK,CAACf,EAAE,KAAKa,OAAO,CAAC;EACnD,CAAC;EAED,MAAMY,qBAAqB,GAAIC,YAAY,IAAK;IAC9C,OAAOzC,MAAM,CAAC0C,MAAM,CAACZ,KAAK,IAAIA,KAAK,CAACnB,UAAU,CAACyB,GAAG,KAAKK,YAAY,CAAC;EACtE,CAAC;EAED,oBACEhD,OAAA,CAACC,YAAY,CAACiD,QAAQ;IACpBC,KAAK,EAAE;MACL5C,MAAM;MACNS,UAAU;MACVkB,iBAAiB;MACjBI,SAAS;MACTO,QAAQ;MACRE;IACF,CAAE;IAAA1C,QAAA,EAEDA;EAAQ;IAAA+C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACjD,GAAA,CAvGWF,aAAa;AAAAoD,EAAA,GAAbpD,aAAa;AAAA,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Downloads\\\\sample\\\\food-delivery-app\\\\frontend\\\\src\\\\components\\\\ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FaStar } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\nimport { useOrder } from '../context/OrderContext';\nimport './ReviewForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewForm = ({\n  orderId,\n  itemId,\n  onReviewSubmitted\n}) => {\n  _s();\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [comment, setComment] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (rating === 0) {\n      toast.error('Please select a rating');\n      return;\n    }\n    if (comment.trim() === '') {\n      toast.error('Please enter a comment');\n      return;\n    }\n    setLoading(true);\n    try {\n      // In a real app, you would send this to your backend\n      // const response = await axios.post('/api/reviews', {\n      //   restaurant: restaurantId,\n      //   rating,\n      //   comment\n      // });\n\n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Create a mock review\n      const newReview = {\n        _id: `review-${Date.now()}`,\n        user: {\n          name: 'You'\n        },\n        rating,\n        comment,\n        createdAt: new Date().toISOString()\n      };\n\n      // Call the callback with the new review\n      if (onReviewSubmitted) {\n        onReviewSubmitted(newReview);\n      }\n\n      // Reset form\n      setRating(0);\n      setComment('');\n      toast.success('Review submitted successfully!');\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      toast.error('Failed to submit review. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Write a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"star-rating\",\n          children: [...Array(5)].map((_, index) => {\n            const ratingValue = index + 1;\n            return /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"rating\",\n                value: ratingValue,\n                onClick: () => setRating(ratingValue)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FaStar, {\n                className: \"star\",\n                color: ratingValue <= (hover || rating) ? \"#ffc107\" : \"#e4e5e9\",\n                size: 24,\n                onMouseEnter: () => setHover(ratingValue),\n                onMouseLeave: () => setHover(0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rating-text\",\n          children: rating ? `You rated: ${rating} star${rating !== 1 ? 's' : ''}` : 'Select a rating'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\",\n          children: \"Your Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comment\",\n          value: comment,\n          onChange: e => setComment(e.target.value),\n          placeholder: \"Share your experience with this restaurant...\",\n          rows: 4,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-review-btn\",\n        disabled: loading,\n        children: loading ? 'Submitting...' : 'Submit Review'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewForm, \"2BYW6JekUriV2v8lCdbPTYQR2Ws=\");\n_c = ReviewForm;\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useState","FaStar","toast","useOrder","jsxDEV","_jsxDEV","ReviewForm","orderId","itemId","onReviewSubmitted","_s","rating","setRating","hover","setHover","comment","setComment","loading","setLoading","handleSubmit","e","preventDefault","error","trim","Promise","resolve","setTimeout","newReview","_id","Date","now","user","name","createdAt","toISOString","success","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Array","map","_","index","ratingValue","type","value","onClick","color","size","onMouseEnter","onMouseLeave","htmlFor","id","onChange","target","placeholder","rows","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/priya/Downloads/sample/food-delivery-app/frontend/src/components/ReviewForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FaStar } from 'react-icons/fa';\nimport { toast } from 'react-toastify';\nimport { useOrder } from '../context/OrderContext';\nimport './ReviewForm.css';\n\nconst ReviewForm = ({ orderId, itemId, onReviewSubmitted }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [comment, setComment] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (rating === 0) {\n      toast.error('Please select a rating');\n      return;\n    }\n    \n    if (comment.trim() === '') {\n      toast.error('Please enter a comment');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      // In a real app, you would send this to your backend\n      // const response = await axios.post('/api/reviews', {\n      //   restaurant: restaurantId,\n      //   rating,\n      //   comment\n      // });\n      \n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      // Create a mock review\n      const newReview = {\n        _id: `review-${Date.now()}`,\n        user: { name: 'You' },\n        rating,\n        comment,\n        createdAt: new Date().toISOString()\n      };\n      \n      // Call the callback with the new review\n      if (onReviewSubmitted) {\n        onReviewSubmitted(newReview);\n      }\n      \n      // Reset form\n      setRating(0);\n      setComment('');\n      \n      toast.success('Review submitted successfully!');\n    } catch (error) {\n      console.error('Error submitting review:', error);\n      toast.error('Failed to submit review. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"review-form-container\">\n      <h3>Write a Review</h3>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"rating-input\">\n          <div className=\"star-rating\">\n            {[...Array(5)].map((_, index) => {\n              const ratingValue = index + 1;\n              \n              return (\n                <label key={index}>\n                  <input\n                    type=\"radio\"\n                    name=\"rating\"\n                    value={ratingValue}\n                    onClick={() => setRating(ratingValue)}\n                  />\n                  <FaStar\n                    className=\"star\"\n                    color={ratingValue <= (hover || rating) ? \"#ffc107\" : \"#e4e5e9\"}\n                    size={24}\n                    onMouseEnter={() => setHover(ratingValue)}\n                    onMouseLeave={() => setHover(0)}\n                  />\n                </label>\n              );\n            })}\n          </div>\n          <span className=\"rating-text\">\n            {rating ? `You rated: ${rating} star${rating !== 1 ? 's' : ''}` : 'Select a rating'}\n          </span>\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"comment\">Your Review</label>\n          <textarea\n            id=\"comment\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n            placeholder=\"Share your experience with this restaurant...\"\n            rows={4}\n            required\n          />\n        </div>\n        \n        <button \n          type=\"submit\" \n          className=\"submit-review-btn\"\n          disabled={loading}\n        >\n          {loading ? 'Submitting...' : 'Submit Review'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ReviewForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
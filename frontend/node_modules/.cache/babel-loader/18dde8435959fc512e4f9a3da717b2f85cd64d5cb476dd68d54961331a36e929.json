{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 10000\n});\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(response => response, error => {\n  // Check if error is due to backend server not running\n  if (error.code === 'ECONNABORTED' || error.message === 'Network Error' || error.code === 'ECONNREFUSED') {\n    console.warn('Backend server appears to be offline. Using mock data instead.');\n\n    // Return a resolved promise with mock data structure\n    // The actual mock data will be handled by the components\n    return Promise.resolve({\n      data: {\n        success: true,\n        data: null,\n        isMockData: true\n      }\n    });\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","interceptors","response","use","error","code","message","console","warn","Promise","resolve","data","success","isMockData","reject"],"sources":["C:/Users/priya/Downloads/sample/food-delivery-app/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create an axios instance with default config\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 10000,\n});\n\n// Add a response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    // Check if error is due to backend server not running\n    if (error.code === 'ECONNABORTED' || error.message === 'Network Error' || error.code === 'ECONNREFUSED') {\n      console.warn('Backend server appears to be offline. Using mock data instead.');\n      \n      // Return a resolved promise with mock data structure\n      // The actual mock data will be handled by the components\n      return Promise.resolve({ \n        data: { \n          success: true,\n          data: null,\n          isMockData: true \n        } \n      });\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACrBE,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACC,IAAI,KAAK,cAAc,IAAID,KAAK,CAACE,OAAO,KAAK,eAAe,IAAIF,KAAK,CAACC,IAAI,KAAK,cAAc,EAAE;IACvGE,OAAO,CAACC,IAAI,CAAC,gEAAgE,CAAC;;IAE9E;IACA;IACA,OAAOC,OAAO,CAACC,OAAO,CAAC;MACrBC,IAAI,EAAE;QACJC,OAAO,EAAE,IAAI;QACbD,IAAI,EAAE,IAAI;QACVE,UAAU,EAAE;MACd;IACF,CAAC,CAAC;EACJ;EAEA,OAAOJ,OAAO,CAACK,MAAM,CAACV,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\priya\\\\Downloads\\\\sample\\\\food-delivery-app\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n// Use direct rupee conversion without importing the utility\n// import { formatPriceInRupees } from '../utils/currencyUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState(() => {\n    const savedCart = localStorage.getItem('cart');\n    return savedCart ? JSON.parse(savedCart) : {\n      items: [],\n      restaurant: null\n    };\n  });\n  const [total, setTotal] = useState(0);\n\n  // Update localStorage when cart changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n\n    // Calculate total\n    const cartTotal = cart.items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n    setTotal(cartTotal);\n  }, [cart]);\n\n  // Add item to cart\n  const addToCart = (item, restaurant) => {\n    // Check if item is from a different restaurant\n    if (cart.restaurant && cart.restaurant._id !== restaurant._id) {\n      if (!window.confirm('Adding items from a different restaurant will clear your current cart. Continue?')) {\n        return;\n      }\n      // Clear cart if confirmed\n      setCart({\n        items: [],\n        restaurant: null\n      });\n    }\n    setCart(prevCart => {\n      // Check if item already exists in cart\n      const existingItem = prevCart.items.find(i => i._id === item._id);\n      if (existingItem) {\n        // Update quantity if item exists\n        return {\n          ...prevCart,\n          items: prevCart.items.map(i => i._id === item._id ? {\n            ...i,\n            quantity: i.quantity + 1\n          } : i)\n        };\n      } else {\n        // Add new item with quantity 1\n        return {\n          restaurant,\n          items: [...prevCart.items, {\n            ...item,\n            quantity: 1\n          }]\n        };\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = itemId => {\n    setCart(prevCart => {\n      const updatedItems = prevCart.items.filter(item => item._id !== itemId);\n\n      // If cart is empty, reset restaurant as well\n      if (updatedItems.length === 0) {\n        return {\n          items: [],\n          restaurant: null\n        };\n      }\n      return {\n        ...prevCart,\n        items: updatedItems\n      };\n    });\n  };\n\n  // Update item quantity\n  const updateQuantity = (itemId, quantity) => {\n    if (quantity < 1) return;\n    setCart(prevCart => ({\n      ...prevCart,\n      items: prevCart.items.map(item => item._id === itemId ? {\n        ...item,\n        quantity\n      } : item)\n    }));\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    setCart({\n      items: [],\n      restaurant: null\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      total,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      itemCount: cart.items.reduce((count, item) => count + item.quantity, 0)\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"rnexg6vq8lJSJDdUcxCPlnBxjus=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","savedCart","localStorage","getItem","JSON","parse","items","restaurant","total","setTotal","setItem","stringify","cartTotal","reduce","sum","item","price","quantity","addToCart","_id","window","confirm","prevCart","existingItem","find","i","map","removeFromCart","itemId","updatedItems","filter","length","updateQuantity","clearCart","Provider","value","itemCount","count","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/priya/Downloads/sample/food-delivery-app/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n// Use direct rupee conversion without importing the utility\n// import { formatPriceInRupees } from '../utils/currencyUtils';\n\nconst CartContext = createContext();\n\nexport const useCart = () => useContext(CartContext);\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState(() => {\n    const savedCart = localStorage.getItem('cart');\n    return savedCart ? JSON.parse(savedCart) : { items: [], restaurant: null };\n  });\n  \n  const [total, setTotal] = useState(0);\n\n  // Update localStorage when cart changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n    \n    // Calculate total\n    const cartTotal = cart.items.reduce(\n      (sum, item) => sum + item.price * item.quantity,\n      0\n    );\n    setTotal(cartTotal);\n  }, [cart]);\n\n  // Add item to cart\n  const addToCart = (item, restaurant) => {\n    // Check if item is from a different restaurant\n    if (cart.restaurant && cart.restaurant._id !== restaurant._id) {\n      if (!window.confirm('Adding items from a different restaurant will clear your current cart. Continue?')) {\n        return;\n      }\n      // Clear cart if confirmed\n      setCart({ items: [], restaurant: null });\n    }\n\n    setCart((prevCart) => {\n      // Check if item already exists in cart\n      const existingItem = prevCart.items.find((i) => i._id === item._id);\n\n      if (existingItem) {\n        // Update quantity if item exists\n        return {\n          ...prevCart,\n          items: prevCart.items.map((i) =>\n            i._id === item._id ? { ...i, quantity: i.quantity + 1 } : i\n          ),\n        };\n      } else {\n        // Add new item with quantity 1\n        return {\n          restaurant,\n          items: [...prevCart.items, { ...item, quantity: 1 }],\n        };\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = (itemId) => {\n    setCart((prevCart) => {\n      const updatedItems = prevCart.items.filter((item) => item._id !== itemId);\n      \n      // If cart is empty, reset restaurant as well\n      if (updatedItems.length === 0) {\n        return { items: [], restaurant: null };\n      }\n      \n      return {\n        ...prevCart,\n        items: updatedItems,\n      };\n    });\n  };\n\n  // Update item quantity\n  const updateQuantity = (itemId, quantity) => {\n    if (quantity < 1) return;\n\n    setCart((prevCart) => ({\n      ...prevCart,\n      items: prevCart.items.map((item) =>\n        item._id === itemId ? { ...item, quantity } : item\n      ),\n    }));\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    setCart({ items: [], restaurant: null });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cart,\n        total,\n        addToCart,\n        removeFromCart,\n        updateQuantity,\n        clearCart,\n        itemCount: cart.items.reduce((count, item) => count + item.quantity, 0),\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
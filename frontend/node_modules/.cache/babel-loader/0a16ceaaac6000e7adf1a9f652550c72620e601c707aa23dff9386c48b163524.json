{"ast":null,"code":"import { toast } from 'react-toastify';\n\n// Function to check if the backend server is running\nexport const checkServerStatus = async () => {\n  try {\n    const response = await fetch('/api', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json'\n      },\n      // Short timeout to quickly determine if server is available\n      signal: AbortSignal.timeout(3000)\n    });\n    if (response.ok) {\n      console.log('Backend server is running');\n      return true;\n    } else {\n      console.warn('Backend server returned an error status');\n      return false;\n    }\n  } catch (error) {\n    console.warn('Backend server is not available:', error);\n    toast.warning('Backend server is not running. Some features may be limited and mock data will be used.', {\n      autoClose: 5000\n    });\n    return false;\n  }\n};\nexport default checkServerStatus;","map":{"version":3,"names":["toast","checkServerStatus","response","fetch","method","headers","signal","AbortSignal","timeout","ok","console","log","warn","error","warning","autoClose"],"sources":["C:/Users/priya/Downloads/sample/food-delivery-app/frontend/src/utils/serverCheck.js"],"sourcesContent":["import { toast } from 'react-toastify';\n\n// Function to check if the backend server is running\nexport const checkServerStatus = async () => {\n  try {\n    const response = await fetch('/api', { \n      method: 'GET',\n      headers: { 'Accept': 'application/json' },\n      // Short timeout to quickly determine if server is available\n      signal: AbortSignal.timeout(3000)\n    });\n    \n    if (response.ok) {\n      console.log('Backend server is running');\n      return true;\n    } else {\n      console.warn('Backend server returned an error status');\n      return false;\n    }\n  } catch (error) {\n    console.warn('Backend server is not available:', error);\n    toast.warning(\n      'Backend server is not running. Some features may be limited and mock data will be used.',\n      { autoClose: 5000 }\n    );\n    return false;\n  }\n};\n\nexport default checkServerStatus;"],"mappings":"AAAA,SAASA,KAAK,QAAQ,gBAAgB;;AAEtC;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,MAAM,EAAE;MACnCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QAAE,QAAQ,EAAE;MAAmB,CAAC;MACzC;MACAC,MAAM,EAAEC,WAAW,CAACC,OAAO,CAAC,IAAI;IAClC,CAAC,CAAC;IAEF,IAAIN,QAAQ,CAACO,EAAE,EAAE;MACfC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC,OAAO,IAAI;IACb,CAAC,MAAM;MACLD,OAAO,CAACE,IAAI,CAAC,yCAAyC,CAAC;MACvD,OAAO,KAAK;IACd;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACE,IAAI,CAAC,kCAAkC,EAAEC,KAAK,CAAC;IACvDb,KAAK,CAACc,OAAO,CACX,yFAAyF,EACzF;MAAEC,SAAS,EAAE;IAAK,CACpB,CAAC;IACD,OAAO,KAAK;EACd;AACF,CAAC;AAED,eAAed,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}